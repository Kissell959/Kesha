from gtts import gTTS
import random
import time
import playsound
import speech_recognition as sr
from fuzzywuzzy import fuzz
import datetime
import os
import webbrowser as wb



opts = {
    "alias": ('кеша', 'кеш', 'инакентий', 'каша', 'даун', 'кешун'),
    "tbr": ('скажи', 'покажи', 'расскажи', 'сколько', 'произнеси'),
    "cmds": {
        "time": ('текушее время', 'каторый чяс', 'сейчяс времини'),
        "radio": ('включи музыку', 'васпроизвед радио', 'включи радио'),
        "stupind1": ('расскажи анекдот', 'рассмешы меня', 'ты знаешь анекдот'),
        "slep": ('пока', 'спать', 'спать кеша'),
        "slep for pc": ('выключи пк', 'выключи', 'пока пк'),
        "open1": ('открой браузер', 'открой', 'интернn','открой гугел'),
        "help": ('список команд', 'команды', 'что ты умеешь', 'твои навыки', 'навыки')
    }
}


# функции
def say_message(message):
    voice = gTTS(message, lang="ru")
    file_voice_name = "_audio_" + str(time.time()) + "_" + str(random.randint(0, 100000)) + ".mp3"
    voice.save(file_voice_name)
    playsound.playsound(file_voice_name)
    print("Голосовой ассистент: " + message)


def callback(recognizer, audio):
    try:
        voice = recognizer.recognize_google(audio, language="ru-RU").lower()
        print("[log] Распознано: " + voice)

        if voice.startswith(opts["alias"]):
            # обр к кеше
            cmd = voice

            for x in opts['alias']:
                cmd = cmd.replace(x, "").strip()
            for x in opts['tbr']:
                cmd = cmd.replace(x, "").strip()
            # расспознование и выполняем команду
            cmd = recognizer_cmd(cmd)
            execute_cmd(cmd['cmd'])



    except sr.UnknownValueError:
        print("[log] Голос не рапознан!")

    except sr.RequestError :
        print("[log] Неизвестная ошибка, проверте интернет!")

def reset():
    say_message("Кеша готов к работе")


def recognizer_cmd(cmd):
    rc = {'cmd': '', 'percent': 0}
    for c, v in opts['cmds'].items():

        for x in v:
            vrt = fuzz.ratio(cmd,  x)
            if vrt > rc['percent']:
                rc['cmd'] = c
                rc['percent'] = vrt

    return rc


def execute_cmd(cmds):
    if cmds == 'time':
        #  сказать текуще время
        now1 = datetime.datetime.now()
        say_message("Сейчяc " + str(now1.hour) + ":" + str(now1.minute))
        time.sleep(0.1)
        reset()
    elif cmds == 'radio':
        # васпр аудео радио
        say_message("выполняю")
        chrome_path = '/usr/bin/firefox %s'
        wb.get(chrome_path).open("https://music.yandex.ru/playlists/lk.a070bea6-319f-491d-b12a-92db055427b9")
        time.sleep(0.1)
        reset()

    elif cmds == 'open1':
        # браузер
        say_message("выполняю")
        #say_message("что будим искать?")
        #chrome_path = '/usr/bin/firefox %s'
        #hhh_input = ""
        time.sleep(2)
        wb.open_new_tab('https://www.google.com/'+'python')
        time.sleep(0.1)
        reset()
        # анегдот
    elif cmds == 'stupind1':
        jokes = ['Как смеются программисты? ... ехе ехе ехе',
                 'ЭсКьюЭль запрос заходит в бар, подходит к двум столам и спрашивает .. можно присоединиться?',
                 'Программист это машина для преобразования кофе в код']

        say_message(random.choice(jokes))
        time.sleep(0.1)
        reset()

    elif cmds == 'help':
        # кеша у нас умеет:
        say_message("Я умею...")
        say_message("произносить время ...")
        say_message("рассказывать анекдоты ...")
        say_message("включять музыку...")
        say_message("выключять пк...")
        say_message("и открывать браузер...")
        time.sleep(0.1)
        reset()

    elif cmds == 'slep for pc':
        say_message("выполняю")
        say_message("пока мой друг")
        os.system('systemctl poweroff')


    elif cmds == 'slep':
        # пока кеша
        say_message("пока, мой друг")
        time.sleep(0.1)
        exit()

    else:
        print("Команда не найдена ")
        time.sleep(0.1)
        reset()


# запуск
r = sr.Recognizer()
m = sr.Microphone(device_index=2)

say_message("Добрый день, мой друг")
say_message("кеша вас слушает ")

stop_listening = r.listen_in_background(m, callback)
while True: time.sleep(0.1)
